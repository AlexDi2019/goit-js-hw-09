{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACTC,KAAMC,SAASC,cAAc,UA8BjC,SAASC,EAAcC,EAAUC,GAC7B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KACzB,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACHH,EACAF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,MAExBA,MApCXN,EAAKC,KAAKa,iBAAiB,UAE3B,SAA2BC,GACvBA,EAAMC,iBAEN,MACIV,MAAOW,EACPC,KAAMC,EACNC,OAAQC,GACRN,EAAMO,cAAcC,SACxB,IAAIC,EAAQC,OAAOR,EAAUS,OAC7B,MAAMR,EAAOO,OAAON,EAASO,OACvBN,EAASK,OAAOJ,EAAWK,OAEjC,IAAK,IAAIC,EAAW,EAAGA,GAAYP,EAAQO,IACvCvB,EAAcuB,EAAUH,GACnBI,MAAK,EAACvB,SAAEA,EAAQC,MAAEA,MACfuB,EAAA/B,GAAOgC,QAAQ,uBAAqBzB,QAAiBC,UAExDyB,OAAM,EAAC1B,SAAEA,EAAQC,MAAEA,MAChBuB,EAAA/B,GAAOkC,QAAQ,sBAAoB3B,QAAeC,UAE1DkB,GAASN,EAEblB,EAAKC,KAAKgC","sources":["src/js/03-promises.js"],"sourcesContent":["import Notify from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n    form: document.querySelector('.form'),\n};\n\nrefs.form.addEventListener('submit', handleSubmitClick);\n\nfunction handleSubmitClick(event) {\n    event.preventDefault();\n\n    const {\n        delay: delayForm,\n        step: stepForm,\n        amount: amountForm,\n    } = event.currentTarget.elements;\n    let delay = Number(delayForm.value);\n    const step = Number(stepForm.value);\n    const amount = Number(amountForm.value);\n\n    for (let position = 1; position <= amount; position++) {\n        createPromise(position, delay)\n            .then(({ position, delay }) => {\n                Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n            })\n            .catch(({ position, delay }) => {\n                Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n            });\n        delay += step;\n    }\n    refs.form.reset();\n}\n\nfunction createPromise(position, delay) {\n    return new Promise((resolve, reject) => {\n        const shouldResolve = Math.random() > 0.3;\n        setTimeout(() => {\n            if (shouldResolve) {\n                resolve({ position, delay });\n            } else {\n                reject({ position, delay });\n            }\n        }, delay);\n    });\n}"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","delayForm","step","stepForm","amount","amountForm","currentTarget","elements","delay1","Number","value","position1","then","$parcel$interopDefault","success","catch","failure","reset"],"version":3,"file":"03-promises.9f820df2.js.map"}